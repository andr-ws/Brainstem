# Code for an AUC/ROC analysis of brainstem regions

library(pROC)

# Will need to use the corrected values (following linear model confound correction) from regions identified as sig following correction

# peduncles: rSCP (2), rMCP (3), lMCP (4), lICP (6)
# brainstem nuclei: 

mod_matrix <- read_excel("~/Desktop/CD_Volumetry/Mod_matrix_motor_score.xlsx", col_names = FALSE)
demographics <- data.frame(sex = mod_matrix[, 1], group = mod_matrix[, 2], etiv = mod_matrix[, 3], age = mod_matrix[, 4], dis_dur = mod_matrix[, 5])
names(demographics) <- c("sex", "group", "age", "dis_dur")

dat <- read_excel("~/Desktop/CD_Volumetry/bstem_peduncle_harm_motor_score.xlsx", col_names = FALSE)
dat <- t(bstem_peduncle_vols)

rSCP_c <- dat[,2]
rMCP_c <- dat[,3]
lMCP_c <- dat[,4]
lICP_c <- dat[,6]

regions_c <- list(rSCP = rSCP, rMCP = rMCP, lMCP = lMCP, lCIP = lCIP, ...)
correc_regions <- list()

# Class labels (0 = SO)
outcome <- c(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1)

for (i in seq_along(regions_c)) {
  y <- regions_c[[i]]
  model_dat <- data.frame(demographics, y)
  model_dat <- t(t(model_dat))
  model_dat <- as.data.frame(model_dat)

  region_model <- lm(y ~ sex + etiv + age + dis_dur, data = data)
  
  region_resid <- region_model$residuals
  
  correc_regions[[i]] <- y + region_resid
  
}

# fit logistic models

roc_objs <- list()

logit_regions <- list()

predicted_scores <- list()

for (i in seq_along(correc_regions)) {

  logit_model <- glm(outcome ~ correc_regions[[i]], data = correc_regions, family = binomial)
  
  predicted_scores[[i]] <- predict(logit_model, newdata = logit_regions[i], type = "response")
  
  roc_objs[[i]] <- roc(outcome, predicted_scores[[i]])
 
}

######## Combined ROC Plot
labels <- c("Pons", "Brainstem", "Left SCP", "Right SCP", "Left MCP", "Right MCP", "SCP", "MCP")
# Create an empty plot
plot(0, 0, type = "n", xlim = c(0, 1), ylim = c(0, 1), xlab = "False Positive Rate", ylab = "True Positive Rate", main = "ROC Curves")
grid()
auc_values <- c()

for (i in seq_along(roc_objs)) {
  lines(roc_objs[[i]], col = i)
  auc_values[i] <- auc(roc_objs[[i]])
}

# Create a legend with AUC values
legend_text <- paste(labels, " (AUC = ", round(auc_values, 2), ")", sep="")
legend("bottomleft", legend = legend_text, col = 1:length(labels), lty = 1, cex = 0.8, lwd = 1.6)

########

######## Brainstem Nuclei ROC Plot
labels_bstem <- c("Pons", "Brainstem")
plot(0, 0, type = "n", xlim = c(0, 1), ylim = c(0, 1), xlab = "False Positive Rate", ylab = "True Positive Rate", main = "ROC Curves")
grid()
auc_values <- c()
# Subset the brainstem nuclei
roc_objs_bstem <- roc_objs[c(1, 2)]

for (i in seq_along(roc_objs_bstem)) {
  if (i == 1) {
    lines(roc_objs_bstem[[i]], col = "blue")
  } else {
    lines(roc_objs_bstem[[i]], col = "red")
  }
}

# Create a legend with AUC values
auc_values_bstem <- sapply(roc_objs_bstem, function(x) x$auc)

legend_text_bstem <- paste(labels_bstem, " (AUC = ", round(auc_values_bstem, 2), ")", sep="")
legend("bottomleft", legend = legend_text_bstem, col = c("blue", "red", 2:(length(roc_objs_bstem) + 1)), lty = 1:(length(roc_objs_bstem) + 1), cex = 0.8, lwd = 1.6)

########

######## Peduncles ROC Plot
labels_ped <- c("Left SCP", "Right SCP", "Left MCP", "Right MCP", "SCP", "MCP")
plot(0, 0, type = "n", xlim = c(0, 1), ylim = c(0, 1), xlab = "False Positive Rate", ylab = "True Positive Rate", main = "ROC Curves")
grid()
auc_values_ped <- c()

# Subset the peduncles
roc_objs_ped <- roc_objs[c(3, 4, 5, 6, 7, 8)]

# colours for peduncles

cols_ped <- c("red", "green", "blue", "yellow", "orange", "purple", "black")

for (i in seq_along(roc_objs_ped)) {
  lines(roc_objs_ped[[i]], col = cols_ped[i])
}

# Create a legend with AUC values
auc_values_ped <- sapply(roc_objs_ped, function(x) x$auc)

legend_text_ped <- paste(labels_ped, " (AUC = ", round(auc_values_ped, 2), ")", sep="")
legend("bottomleft", legend = legend_text_ped, col = cols_ped, cex = 0.8, lwd = 1.6)
